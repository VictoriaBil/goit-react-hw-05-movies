{"version":3,"file":"static/js/199.0bba044e.chunk.js","mappings":"8SAEMA,EAAU,mCACVC,EAAW,+BAEJC,EAAgB,mCAAG,6GAELC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBD,IAHhB,cAEtBI,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,gCAO5BC,MAAM,mCACNC,QAAQC,IAAR,MAR4B,yDAAH,qDAYhBC,EAAc,mCAAG,WAAMC,GAAN,gGAEHR,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBACgCW,IAH7B,cAKW,KAH/BP,EAFoB,QAKbC,KAAKC,QAAQM,QACxBL,MAAM,4BANkB,kBAQnBH,EAASC,KAAKC,SARK,gCAU1BC,MAAM,mCACNC,QAAQC,IAAR,MAX0B,yDAAH,sDAedI,EAAe,mCAAG,WAAMC,GAAN,gGAEJX,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAa,EADA,oBACcd,IAHV,cAErBI,EAFqB,yBAKpBA,EAASC,MALW,gCAO3BE,MAAM,mCACNC,QAAQC,IAAR,MAR2B,yDAAH,sDAYfM,EAAe,mCAAG,WAAMC,GAAN,gGAEJb,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAe,EADA,4BAC2BhB,IAHvB,cAErBI,EAFqB,yBAKpBA,EAASC,KAAKY,MALM,gCAO3BV,MAAM,mCACNC,QAAQC,IAAR,MAR2B,yDAAH,sDAYfS,EAAe,mCAAG,WAAMF,GAAN,gGAEJb,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAe,EADA,4BAC2BhB,IAHvB,cAErBI,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,gCAO3BC,MAAM,mCACNC,QAAQC,IAAR,MAR2B,yDAAH,qD,kGCtDfU,EAAYC,EAAAA,GAAAA,IAAH,sJASTC,EAAOD,EAAAA,GAAAA,GAAH,khBA0BJE,EAAQF,EAAAA,GAAAA,GAAH,0H,kBChCLG,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACP,EAAD,UACGK,EAAOG,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,MAAOf,EAAS,EAATA,GACjC,OACE,SAACO,EAAD,WACE,UAAC,KAAD,CAAMS,GAAE,kBAAahB,GAAMiB,MAAO,CAAEC,KAAMP,GAA1C,WACE,gBACEQ,IACkB,OAAhBL,EAAA,0CACuCA,GACnCM,EAENC,IAAKN,KAEP,SAACP,EAAD,UAAQO,QAVDf,EAcd,KAGN,C,+FCJD,UApBa,WACX,OAA0CsB,EAAAA,EAAAA,UAAS,MAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACRD,GAAU,IACVtC,EAAAA,EAAAA,MAAmBwC,MAAK,SAAAtC,GACtBkC,GAAiB,OAAIlC,IACrBoC,GAAU,EACX,GACF,GAAE,KAGD,2BACGD,IAAU,SAAC,IAAD,IACVF,IAAiB,SAAC,IAAD,CAAYb,OAAQa,MAG3C,C","sources":["API/FetchApi.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Homepage/Homepage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'fa2d81658e7600d0ffe01f5c9f2cea9c';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getMovieTrending = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    alert('Something went wrong.Try again!');\n    console.log(error);\n  }\n};\n\nexport const getMovieSearch = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    if (response.data.results.length === 0) {\n      alert('There are no such movies');\n    }\n    return response.data.results;\n  } catch (error) {\n    alert('Something went wrong.Try again!');\n    console.log(error);\n  }\n};\n\nexport const getMovieDetails = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    alert('Something went wrong.Try again!');\n    console.log(error);\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    alert('Something went wrong.Try again!');\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    alert('Something went wrong.Try again!');\n    console.log(error);\n  }\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n  padding-bottom: 40px;\n  margin-top: 20px;\n`;\n\nexport const List = styled.li`\n  list-style: none;\n  border-radius: 4px;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  transition: transform 0.3s;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  &:hover {\n    transform: scale(1.03);\n    transition: 400ms linear;\n    box-shadow: 4px 4px 6px 0px rgba(0, 0, 0, 0.9);\n  }\n\n  > a {\n    text-decoration: none;\n  }\n\n  img {\n    width: 350px;\n  }\n`;\n\nexport const Title = styled.h1`\n  padding: 4px;\n  color: black;\n  font-size: 20px;\n  font-weight: 700;\n  text-align: center;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Container, List, Title } from '../MovieList/MovieList.styled';\nimport noPoster from '../../image/noposter.webp';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {movies.map(({ poster_path, title, id }) => {\n        return (\n          <List key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={\n                  poster_path !== null\n                    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                    : noPoster\n                }\n                alt={title}\n              />\n              <Title>{title}</Title>\n            </Link>\n          </List>\n        );\n      })}\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import { getMovieTrending } from 'API/FetchApi';\nimport { useState, useEffect } from 'react';\nimport { MoviesList } from '../../components/MovieList/MovieList';\nimport { Loader } from '../../Loader/Loader';\n\nconst Home = () => {\n  const [trendingMovie, setTrendingMovie] = useState(null);\n  const [onLoad, setOnLoad] = useState(false);\n\n  useEffect(() => {\n    setOnLoad(true);\n    getMovieTrending().then(response => {\n      setTrendingMovie([...response]);\n      setOnLoad(false);\n    });\n  }, []);\n\n  return (\n    <div>\n      {onLoad && <Loader />}\n      {trendingMovie && <MoviesList movies={trendingMovie} />}\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["API_KEY","BASE_URL","getMovieTrending","axios","response","data","results","alert","console","log","getMovieSearch","query","length","getMovieDetails","id","getMovieCredits","movieId","cast","getMovieReviews","Container","styled","List","Title","MoviesList","movies","location","useLocation","map","poster_path","title","to","state","from","src","noPoster","alt","useState","trendingMovie","setTrendingMovie","onLoad","setOnLoad","useEffect","then"],"sourceRoot":""}