{"version":3,"file":"static/js/112.07e82e58.chunk.js","mappings":"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","sources":["API/FetchApi.jsx","components/AdditionalInfo/AdditionalInfo.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'fa2d81658e7600d0ffe01f5c9f2cea9c';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getMovieTrending = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    alert('Something went wrong.Try again!');\n    console.log(error);\n  }\n};\n\nexport const getMovieSearch = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    if (response.data.results.length === 0) {\n      alert('There are no such movies');\n    }\n    return response.data.results;\n  } catch (error) {\n    alert('Something went wrong.Try again!');\n    console.log(error);\n  }\n};\n\nexport const getMovieDetails = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    alert('Something went wrong.Try again!');\n    console.log(error);\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    alert('Something went wrong.Try again!');\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    alert('Something went wrong.Try again!');\n    console.log(error);\n  }\n};\n","import { Link, useLocation, Outlet } from 'react-router-dom';\nimport { PageNames } from '../../router/paths';\n\nexport const AdditionalInfo = () => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <title>Additional information</title>\n      <ul>\n        <li>\n          <Link\n            to={PageNames.cast}\n            state={{ from: location.state?.from ?? '/' }}\n          >\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link\n            to={PageNames.reviews}\n            state={{ from: location.state?.from ?? '/' }}\n          >\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\n","import PropTypes from 'prop-types';\n\nexport const MovieInfo = ({\n  movieInfo: { poster_path, title, vote_average, genres, overview },\n}) => {\n  return (\n    <div>\n      <div>\n        <img\n          src={\n            poster_path !== null\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : 'noPoster'\n          }\n          alt={title}\n        />\n      </div>\n      <div>\n        <title>{title}</title>\n        <span>\n          User Score: <p>{Math.round(vote_average * 10)}%</p>\n        </span>\n        <p>Overview</p>\n        <p>{overview}</p>\n        <p>Genres</p>\n        <p>{genres.map(genre => genre.name).join(' , ')}</p>\n      </div>\n    </div>\n  );\n};\n\nMovieInfo.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  vote_average: PropTypes.number,\n  genres: PropTypes.array,\n  overview: PropTypes.string,\n};\n","import { AdditionalInfo } from '../../components/AdditionalInfo/AdditionalInfo';\nimport { Link } from 'react-router-dom';\nimport { MovieInfo } from '../../components/MovieInfo/MovieInfo';\nimport { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from '../../API/FetchApi';\nimport { Loader } from '../../Loader/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      const data = await getMovieDetails(movieId);\n      setMovieDetails(data);\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      {movieDetails && (\n        <>\n          <Link to={location.state?.from ?? '/'}>Go back</Link>\n          <MovieInfo movieInfo={movieDetails} />\n          <AdditionalInfo backPath={location.state?.from ?? '/'} />\n        </>\n      )}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["API_KEY","BASE_URL","getMovieTrending","axios","response","data","results","alert","console","log","getMovieSearch","query","length","getMovieDetails","id","getMovieCredits","movieId","cast","getMovieReviews","AdditionalInfo","location","useLocation","to","PageNames","state","from","MovieInfo","movieInfo","poster_path","title","vote_average","genres","overview","src","alt","Math","round","map","genre","name","join","useParams","useState","movieDetails","setMovieDetails","useEffect","fetchMovieDetails","backPath","Suspense","fallback","Loader"],"sourceRoot":""}