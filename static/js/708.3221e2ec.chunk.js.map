{"version":3,"file":"static/js/708.3221e2ec.chunk.js","mappings":"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","sources":["API/FetchApi.jsx","components/AdditionalInfo/AdditionalInfo.styled.js","components/AdditionalInfo/AdditionalInfo.jsx","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'fa2d81658e7600d0ffe01f5c9f2cea9c';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getMovieTrending = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    alert('Something went wrong.Try again!');\n    console.log(error);\n  }\n};\n\nexport const getMovieSearch = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    if (response.data.results.length === 0) {\n      alert('There are no such movies');\n    }\n    return response.data.results;\n  } catch (error) {\n    alert('Something went wrong.Try again!');\n    console.log(error);\n  }\n};\n\nexport const getMovieDetails = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    alert('Something went wrong.Try again!');\n    console.log(error);\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    alert('Something went wrong.Try again!');\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    alert('Something went wrong.Try again!');\n    console.log(error);\n  }\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Title = styled.p`\n  font-size: 30px;\n  font-weight: 700;\n  color: teal;\n  margin: 0;\n  margin-top: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 20px;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  list-style: none;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 10px 30px;\n  display: inline-block;\n  width: 50px;\n  text-align: center;\n  border-radius: 5px;\n  border: 2px solid teal;\n  text-decoration: none;\n  color: black;\n  font-weight: 700;\n\n  &.active {\n    color: white;\n    background-color: teal;\n  }\n`;\n","import { useLocation, Outlet } from 'react-router-dom';\nimport { PageNames } from '../../router/paths';\nimport {\n  Wrapper,\n  Title,\n  List,\n  Item,\n  Link,\n} from '../AdditionalInfo/AdditionalInfo.styled';\n\nexport const AdditionalInfo = () => {\n  const location = useLocation();\n\n  return (\n    <Wrapper>\n      <Title>Additional information</Title>\n      <List>\n        <Item>\n          <Link\n            to={PageNames.cast}\n            state={{ from: location.state?.from ?? '/' }}\n          >\n            Cast\n          </Link>\n        </Item>\n        <Item>\n          <Link\n            to={PageNames.reviews}\n            state={{ from: location.state?.from ?? '/' }}\n          >\n            Reviews\n          </Link>\n        </Item>\n      </List>\n      <Outlet />\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  margin-top: 20px;\n  gap: 40px;\n`;\n\nexport const ImgWrap = styled.div`\n  padding: 15px;\n`;\n\nexport const Title = styled.p`\n  margin: 0;\n  font-size: 45px;\n  font-weight: 700;\n  color: teal;\n`;\n\nexport const InfoBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const UserScore = styled.span`\n  display: flex;\n  gap: 10px;\n  margin-top: 20px;\n  font-size: 20px;\n  font-weight: 700;\n\n  p {\n    margin: 0;\n  }\n`;\n\nexport const Overview = styled.p`\n  margin-top: 20px;\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: 0;\n`;\n\nexport const OverviewInfo = styled.p`\n  margin-top: 10px;\n  margin-bottom: 0;\n`;\n\nexport const Genres = styled.p`\n  margin-top: 20px;\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: 0;\n`;\n\nexport const GenresInfo = styled.p`\n  margin-top: 10px;\n  margin-bottom: 0;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  Container,\n  Title,\n  UserScore,\n  InfoBlock,\n  Overview,\n  OverviewInfo,\n  Genres,\n  GenresInfo,\n  ImgWrap,\n} from '../MovieInfo/MovieInfo.styled';\nimport noPoster from '../../image/noposter.webp';\n\nexport const MovieInfo = ({\n  movieInfo: { poster_path, title, vote_average, genres, overview },\n}) => {\n  return (\n    <Container>\n      <ImgWrap>\n        <img\n          src={\n            poster_path !== null\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : noPoster\n          }\n          alt={title}\n        />\n      </ImgWrap>\n      <InfoBlock>\n        <Title>{title}</Title>\n        <UserScore>\n          User Score: <p>{Math.round(vote_average * 10)}%</p>\n        </UserScore>\n        <Overview>Overview</Overview>\n        <OverviewInfo>{overview}</OverviewInfo>\n        <Genres>Genres</Genres>\n        <GenresInfo>{genres.map(genre => genre.name).join(' , ')}</GenresInfo>\n      </InfoBlock>\n    </Container>\n  );\n};\n\nMovieInfo.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  vote_average: PropTypes.number,\n  genres: PropTypes.array,\n  overview: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  font-size: 20px;\n  font-weight: 700;\n\n  &:hover {\n    color: teal;\n  }\n`;\n","import { AdditionalInfo } from '../../components/AdditionalInfo/AdditionalInfo';\nimport { MovieInfo } from '../../components/MovieInfo/MovieInfo';\nimport { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from '../../API/FetchApi';\nimport { Loader } from '../../Loader/Loader';\nimport { Link } from '../MovieDetails/MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [error, setError] = useState(null);\n  const [onLoad, setOnLoad] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        setOnLoad(true);\n        const data = await getMovieDetails(movieId);\n        setMovieDetails(data);\n        setOnLoad(false);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setOnLoad(false);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      {movieDetails && (\n        <>\n          <Link to={location.state?.from ?? '/'}>Go back</Link>\n          <MovieInfo movieInfo={movieDetails} />\n          <AdditionalInfo backPath={location.state?.from ?? '/'} />\n        </>\n      )}\n      {error && <p>Something went wrong. Please, try again</p>}\n      <Suspense fallback={onLoad && <Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["API_KEY","BASE_URL","getMovieTrending","axios","response","data","results","alert","console","log","getMovieSearch","query","length","getMovieDetails","id","getMovieCredits","movieId","cast","getMovieReviews","Wrapper","styled","Title","List","Item","Link","NavLink","AdditionalInfo","location","useLocation","to","PageNames","state","from","Container","ImgWrap","InfoBlock","UserScore","Overview","OverviewInfo","Genres","GenresInfo","MovieInfo","movieInfo","poster_path","title","vote_average","genres","overview","src","noPoster","alt","Math","round","map","genre","name","join","useParams","useState","movieDetails","setMovieDetails","error","setError","onLoad","setOnLoad","useEffect","fetchMovieDetails","backPath","Suspense","fallback","Loader"],"sourceRoot":""}